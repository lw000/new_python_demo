#!/usr/bin/env python
# -*- coding=utf-8 -*-

'''
Created on 2018年05月31日

@author: Administrator
'''

import sys
import cProfile
import demjson
import requests
import logging
import dvtool

logging.basicConfig(level=logging.DEBUG)
log = logging.getLogger(__name__)

DEBUG = 1
if DEBUG == 1:
    __server_url = 'http://api.klgwl.com'
else:
    __server_url = 'http://120.78.182.253:8181'

__login_result = {}
__base_config = dict(app_version='3.0.1', client_type='pc', lang='1')

def __send_post(url, params):
    post_data = dvtool.webSignWithJson(demjson.encode(params))
    
    log.debug(post_data)
    
    payload = demjson.decode(post_data)
    r = requests.post(url, data=payload) 
    print(r.url)
    print(r.text)
    
    return r

def __send_get(url, params):    
    r = requests.get(url, params)  
    print(r.url)
    print(r.text)
    
    return r

def __post_user_login(host):
    url = host + '/user/login'
    commonparams = {'app_version':__base_config['app_version'], 'client_type':__base_config['client_type'], 'lang':__base_config['lang']}
    params1 = {'phone':'13632767233', 'pwd':dvtool.webRsaEncrypt('lwstar23133')}
    params = {}
    params.update(commonparams)
    params.update(params1)
    r = __send_post(url, params)
    
    if(r.status_code == 200):
        global __login_result
        data = demjson.decode(r.text)
        __login_result = data['data']
    else:
        log.debug(r)

def __post_user_resetPassword(host):
    url = host + '/user/resetPassword'
    commonparams = dict(app_version=__base_config['app_version'], client_type=__base_config['client_type'], lang=__base_config['lang'], token=__login_result['token_info']['token'])
    params1 = dict(uid=50037, old_pwd=dvtool.webRsaEncrypt('lwstar23133'), pwd=dvtool.webRsaEncrypt('lwstar23133'))
    params = {}
    params.update(commonparams)
    params.update(params1)
    r = __send_post(url, params)
    if(r.status_code == 200):
        result = demjson.decode(r.text)
        if(result['result'] == 1):
            print('result:' + str(result['result']))
            print('data:' + str(result['data']))
        else:
            print('result:' + str(result))
    else:
        log.debug(r)

#获取用户信息
def __post_user_info(host): 
    url = host + '/user/info'
    commonparams = dict(app_version=__base_config['app_version'], client_type=__base_config['client_type'], lang=__base_config['lang'], token=__login_result['token_info']['token'])
    params1 = dict(uid=50037, to_uid=50037)
    params = {}
    params.update(commonparams)
    params.update(params1)
    r = __send_post(url, params)  
    if(r.status_code == 200):
        result = demjson.decode(r.text)
        if(result['result'] == 1):
            print('result:' + str(result['result']))
            print('data:' + str(result['data']))
        else:
            print('result:' + str(result))
    else:
        log.debug(r)
        
#获取用户基本信息
def __post_user_baseinfo(host):
    url = host + '/user/info'
    commonparams = dict(app_version=__base_config['app_version'], client_type=__base_config['client_type'], lang=__base_config['lang'], token=__login_result['token_info']['token'])
    params1 = dict(uid=50037, to_uid=50037)
    params = {}
    params.update(commonparams)
    params.update(params1)
    r = __send_post(url, params)   
    if(r.status_code == 200):
        result = demjson.decode(r.text)
        if(result['result'] == 1):
            print('result:' + str(result['result']))
            print('data:' + str(result['data']))
        else:
            print('result:' + str(result))
    else:
        log.debug(r)
        
def __post_setting_list(host):
    url = host + '/setting/list'   
    commonparams = dict(app_version=__base_config['app_version'], client_type=__base_config['client_type'], lang=__base_config['lang'], token=__login_result['token_info']['token'])
    params1 = dict(uid=50037, development=0, name='liwei')
    params = {}
    params.update(commonparams)
    params.update(params1)
    r = __send_post(url, params)   
    if(r.status_code == 200):
        result = demjson.decode(r.text)
        if(result['result'] == 1):
            print('result:' + str(result['result']))
            print('data:' + str(result['data']))
        else:
            print('result:' + str(result))
    else:
        log.debug(r)
        
        
def __post_area_getProvinces(host):
    url = host + '/area/getProvinces'
    commonparams = dict(app_version=__base_config['app_version'], client_type=__base_config['client_type'], lang=__base_config['lang'], token=__login_result['token_info']['token'])
    params = {}
    params.update(commonparams)
    r = __send_post(url, params)   
    if(r.status_code == 200):
        result = demjson.decode(r.text)
        if(result['result'] == 1):
            print('result:' + str(result['result']))
            print('data:' + str(result['data']))
        else:
            print('result:' + str(result))
    else:
        log.debug(r)


def __post_area_getCities(host):
    url = host + '/area/getCities'
    commonparams = dict(app_version=__base_config['app_version'], client_type=__base_config['client_type'], lang=__base_config['lang'], token=__login_result['token_info']['token'])
    params1 = dict(province_id=6)
    params = {}
    params.update(commonparams)
    params.update(params1)
    r = __send_post(url, params)
    
    if(r.status_code == 200):
        result = demjson.decode(r.text)
        if(result['result'] == 1):
            print('result:' + str(result['result']))
            print('data:' + str(result['data']))
        else:
            print('result:' + str(result))
    else:
        log.debug(r)
        
def __post_area_getCityCode(host):
    url = host + '/area/getCityCode'
    commonparams = dict(app_version=__base_config['app_version'], client_type=__base_config['client_type'], lang=__base_config['lang'], token=__login_result['token_info']['token'])
    params = {}
    params.update(commonparams)
    r = __send_post(url, params)  
    if(r.status_code == 200):
        result = demjson.decode(r.text)
        if(result['result'] == 1):
            print('result:' + str(result['result']))
            print('data:' + str(result['data']))
        else:
            print('result:' + str(result))
    else:
        log.debug(r)
             
 
def __post_discuss_getTags(host):
    url = host + '/discuss/getTags'
    commonparams = dict(app_version=__base_config['app_version'], client_type=__base_config['client_type'], lang=__base_config['lang'], token=__login_result['token_info']['token'])
    params = {}
    params.update(commonparams)
    r = __send_post(url, params)  
    if(r.status_code == 200):
        result = demjson.decode(r.text)
        if(result['result'] == 1):
            print('result:' + str(result['result']))
            print('data:' + str(result['data']))
        else:
            print('result:' + str(result))
    else:
        log.debug(r)
        

def __post_discuss_list(host):
    url = host + '/discuss/list'
    commonparams = dict(app_version=__base_config['app_version'], client_type=__base_config['client_type'], lang=__base_config['lang'], token=__login_result['token_info']['token'])
    params1 = dict(uid=50037, type=0, area_code=0, v_id=0, page=0, limit=20, first_id=0, last_id=0)
    params = {}
    params.update(commonparams)
    params.update(params1)
    r = __send_post(url, params)  
    if(r.status_code == 200):
        result = demjson.decode(r.text)
        if(result['result'] == 1):
            print('result:' + str(result['result']))
            print('data:' + str(result['data']))
        else:
            print('result:' + str(result))
    else:
        log.debug(r)
           
def api_init():
    __post_user_login(__server_url)
    
def api_start():
    __post_user_resetPassword(__server_url)
    __post_user_info(__server_url)
    __post_user_baseinfo(__server_url)
    
    __post_area_getProvinces(__server_url)
    __post_area_getCities(__server_url)
    __post_area_getCityCode(__server_url)
    
    __post_discuss_getTags(__server_url)
    
    __post_setting_list(__server_url)
    

def api_stop():
    pass