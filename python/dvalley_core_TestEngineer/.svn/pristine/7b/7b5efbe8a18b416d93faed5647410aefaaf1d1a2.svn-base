#!/usr/bin/env python
# -*- coding=utf-8 -*-

'''
Created on 2018年05月31日

@author: Administrator
'''

import logging
import dvcore
from base_api import BaseApi
from user_api import UserApi
from discuss_api import DiscussApi
from setting_api import SettingApi
from area_api import AreaApi
from social_api import SocialApi

logging.basicConfig(level=logging.DEBUG, format='%(asctime)s [pid:%(process)s] %(levelname)s %(message)s %(filename)s[line:%(lineno)d]',
                    datefmt='%Y-%m-%d %H:%M:%S')
      
class TesterApi(BaseApi):
    def __init__(self, debug=0, account=None, pwd=None):
        super(TesterApi, self).__init__(debug=debug)
        
        self.__registerApiModule()
        
        self.__account = account
        self.__pwd = pwd
        
    def login(self):
        ok = self.__post_user_login('/user/login')
        return ok
    
    def start(self):
        for _, v in enumerate(self.__api_module):
            v.start()
                        
    def stop(self):
        for _, v in enumerate(self.__api_module):
            v.stop()
    
    @property
    def account(self):
        return self.__account
    
    @account.setter
    def account(self, account):
        self.__account = account
        
    @property
    def pwd(self):
        return self.__pwd
     
    @pwd.setter
    def pwd(self, pwd):
        self.__pwd = pwd    
        
    def __registerApiModule(self):
        self.__api_module = []
        self.__api_module.append(UserApi(self._debug))
        self.__api_module.append(DiscussApi(self._debug))
        self.__api_module.append(SettingApi(self._debug))
        self.__api_module.append(AreaApi(self._debug))
        self.__api_module.append(SocialApi(self._debug))
            
    def __post_user_login(self, method):
        params = {'phone':self.__account, 'pwd':dvcore.webRsaEncrypt(self.__pwd)}
        code, result = self._post(method=method, token=None, params=params)
        if(code == 200):
            if result['result'] == 1:
                for _, v in enumerate(self.__api_module):
                    v.updateLoginResultData(result['data'])
                logging.debug('data:' + str(result['data']))
                return True
            elif result['result'] == 0:
                logging.debug('error:' + str(result['error']))
            else:
                logging.debug(str(result))
        else:
            logging.debug(code, result)
            
        return False
            